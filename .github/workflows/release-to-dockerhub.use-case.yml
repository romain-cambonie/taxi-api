name: Release the up-to-date container on ECR.

on:
  workflow_dispatch:

jobs:
  # TODO Add standard application build/validate/release/run CI
  build-and-upload-application-bundle:
    uses: romain-cambonie/serenity-workflows/.github/workflows/_build-and-upload-artifact.reusable.yml@master
    with:
      node-version: '18.13'
      package-manager: 'npm'
      package-manager-dependencies-command: 'npm install'
      build-command: 'run build'
      out-dir: 'build'


  build-and-push-docker-image:
    name: Build Docker image and push to registry if on master branch
    runs-on: ubuntu-latest
    needs:
      - dynamic-variables
      - build-and-upload-application-bundle

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download application build artifact
        uses: actions/download-artifact@v3
        with:
          name: bundle
          path: .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.10.0

      - name: Build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}
          docker build -t ${{ secrets.ECR_REPOSITORY_NAME }} .
          docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:${{ secrets.ECR_REPOSITORY_TAG }} ${{ secrets.ECR_REPOSITORY_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:${{ secrets.ECR_REPOSITORY_TAG }}
          docker push ${{ secrets.ECR_REPOSITORY_NAME }}:${{ secrets.ECR_REPOSITORY_TAG }}

  #notify-discord:
  #  if: ${{ github.ref == 'refs/heads/master' }}
  #  needs:
  #    - build-and-push-docker-image
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Prepare payload
  #      run: >-
  #        (jq -r '.' <<< '
  #        {
  #          "username": "Taxi Aymeric Docker Deployer",
  #          "content": "Une nouvelle image à été poussée sur taxi-aymeric-api"
  #        }'
  #        ) > payload
  #    - name: Send notification
  #      run: >-
  #        curl
  #        --header "Content-Type:application/json"
  #        --request POST
  #        --data @payload
  #        ${{ secrets.DISCORD_NOTIFY_HOOK_URL }}
